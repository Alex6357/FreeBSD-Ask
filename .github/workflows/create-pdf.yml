name: 🔗 PDF 生成

on:
  schedule:
    - cron: '0 0 */5 * *'  # 每5天自动运行
  workflow_dispatch:        # 支持手动触发

jobs:
  release:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      # ================= 基础环境配置 =================
      - name: 检出字体仓库
        uses: actions/checkout@v4
        with:
          repository: ykla/ttf-mswin11-zh-deb
          path: .fonts-repo

      - name: 安装中文字体
        run: |
          cd .fonts-repo
          sudo apt-get install -y xfonts-utils
          sudo dpkg -i --force-all ttf-ms-win11-*.deb
          fc-cache -fv  # 刷新字体缓存

      # ================= 代码仓库准备 =================
      - name: 检出主仓库
        uses: actions/checkout@v4
        with:
          path: main-repo
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: 检出PDF生成器
        uses: actions/checkout@v4
        with:
          repository: FreeBSD-Ask/gitbook-pdf-export
          path: pdf-toolkit

      # ================= 标签管理系统 =================
      - name: 初始化标签
        working-directory: main-repo
        run: |
          if ! git describe --tags --abbrev=0 &>/dev/null; then
            git config --global user.name "Auto Publisher"
            git config --global user.email "auto@example.com"
            git tag -a v0.0.0 -m "初始版本"
            git push origin v0.0.0
          fi

      - name: 设置发布日期
        id: date_tag
        run: |
          RELEASE_DATE=$(date -u +"%Y.%m.%d")
          echo "RELEASE_TAG=release/$RELEASE_DATE" >> $GITHUB_ENV

      - name: 获取历史标签
        working-directory: main-repo
        run: |
          git fetch --tags --force
          PREV_TAG=$(git describe --tags --abbrev=0)
          echo "PREV_TAG=$PREV_TAG" >> $GITHUB_ENV

      # ================= 文档生成阶段 =================
      - name: 配置Python环境
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: 安装依赖项
        run: |
          sudo apt-get install -y \
            libpango-1.0-0 \
            libharfbuzz-dev \
            libcairo2-dev
          pip install weasyprint==60.2 \
                    mistune==3.1.0 \
                    pygments==2.18.0

      - name: 生成PDF文档
        run: |
          cd pdf-toolkit
          python mdconv.py ../main-repo
        env:
          PYTHONPATH: ${{ github.workspace }}/pdf-toolkit

      # ================= 变更日志生成 =================
      - name: 生成智能变更日志
        uses: janheinrichmerker/action-github-changelog-generator@v2.4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          futureRelease: ${{ env.RELEASE_TAG }}
          sinceTag: ${{ env.PREV_TAG }}
          excludeTags: "draft,test,temp"
          excludeTagsRegex: ".*-beta|.*-rc[0-9]+"
          dueTag: ${{ env.RELEASE_TAG }}
          user: FreeBSD-Ask
          repo: FreeBSD-Ask
          output: CHANGELOG.md
          configureSections: |
            breaking=⚠️ 重大变更
            feat=✨ 新功能
            fix=🐛 问题修复
            perf=⚡️ 性能优化
            docs=📚 文档更新
          breakingLabels: "breaking-change"
          enhancementLabels: "feat"
          bugLabels: "fix"
          compareLink: true
          verbose: true

      # ================= 发布流程 =================
      - name: 创建版本标签
        working-directory: main-repo
        run: |
          git config --global user.name "Release Bot"
          git config --global user.email "release@example.com"
          git tag -a ${{ env.RELEASE_TAG }} -m "版本更新 ${{ env.RELEASE_TAG }}"
          git push origin ${{ env.RELEASE_TAG }}

      - name: 发布版本
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          name: "Release ${{ env.RELEASE_TAG }}"
          body_path: CHANGELOG.md
          files: |
            pdf-toolkit/build/final.pdf
          draft: false
          prerelease: ${{ contains(env.RELEASE_TAG, '-beta') }}

      - name: 清理旧版本
        if: ${{ !contains(env.RELEASE_TAG, '-beta') }}
        uses: dev-drprasad/delete-older-releases@v1
        with:
          keep_latest: 5
          repo: FreeBSD-Ask/FreeBSD-Ask
          delete_tag_pattern: "release/*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
